From 738c98baa2735f5206f4e12ee915a8a73ee06e03 Mon Sep 17 00:00:00 2001
From: "Veer, Rajkumar" <rajkumar.veer@ti.com>
Date: Thu, 18 Oct 2012 18:54:17 +0530
Subject: [PATCH 21/23] da830: EVM: Add LCD platform support for VGA mode

This patch adds LCD VGA mode(640x480 @ 60Hz) platform support for
da830 evm.

Signed-off-by: Veer, Rajkumar <rajkumar.veer@ti.com>
---
 arch/arm/mach-davinci/Kconfig              |    6 ++++
 arch/arm/mach-davinci/board-da830-evm.c    |   44 ++++++++++++++++++++++++----
 arch/arm/mach-davinci/devices-da8xx.c      |   33 +++++++++++++++++++++
 arch/arm/mach-davinci/include/mach/da8xx.h |    4 +++
 4 files changed, 82 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-davinci/Kconfig b/arch/arm/mach-davinci/Kconfig
index 6acfe26..527e576 100644
--- a/arch/arm/mach-davinci/Kconfig
+++ b/arch/arm/mach-davinci/Kconfig
@@ -188,6 +188,12 @@ config DA830_UI_NAND
 	help
 	  Say Y here to use the NAND flash. Do not forget to setup
 	  the switch correctly.
+
+config GLCD_DVI_VGA
+	bool "DVI-VGA Display (Adapter)"
+	help
+	  Say Y here to use the VGA display . Do not forget to setup
+	  the switch correctly.
 endchoice
 
 config MACH_DAVINCI_DA850_EVM
diff --git a/arch/arm/mach-davinci/board-da830-evm.c b/arch/arm/mach-davinci/board-da830-evm.c
index 1d68b9c..2d3ffd4 100644
--- a/arch/arm/mach-davinci/board-da830-evm.c
+++ b/arch/arm/mach-davinci/board-da830-evm.c
@@ -402,22 +402,45 @@ static inline void da830_evm_init_nand(int mux_mode)
 static inline void da830_evm_init_nand(int mux_mode) {}
 #endif
 
-#ifdef CONFIG_DA830_UI_LCD
+#if defined(CONFIG_DA830_UI_LCD) || defined(CONFIG_GLCD_DVI_VGA)
 static int da830_lcd_hw_init(void)
 {
 	void __iomem *cfg_mstpri2_base;
-	u32 val;
-
+#ifdef CONFIG_GLCD_DVI_VGA
+	u32 emifb_revid = 0;
+	u32 emifb_bprio = 0;
+	u32 *emifb_mem = 0;
+#endif
+	u32 val = 0;
 	/*
 	 * Reconfigure the LCDC priority to the highest to ensure that
 	 * the throughput/latency requirements for the LCDC are met.
 	 */
 	cfg_mstpri2_base = DA8XX_SYSCFG0_VIRT(DA8XX_MSTPRI2_REG);
-
 	val = __raw_readl(cfg_mstpri2_base);
 	val &= 0x0fffffff;
 	__raw_writel(val, cfg_mstpri2_base);
 
+#ifdef CONFIG_GLCD_DVI_VGA
+	/*
+	 *The PBBPR set to a moderately low value to provide an acceptable
+	 *balance of SDRAM efficiency and latency for high priority master.
+	 */
+	emifb_mem = ioremap_nocache((DA8XX_EMIF30_CONTROL_BASE), 256);
+	if(emifb_mem == NULL)
+	{
+		pr_warning("da830_evm_init: EMIFB mem allocate failed\n");
+		return 0;
+	}
+
+	/* Rev ID reg */
+	emifb_revid = *(u32 *)emifb_mem;
+
+	/* set BPRIO */
+	*(emifb_mem + DA8XX_EMIF30_BPRIO_OFFSET/4) = 0x20;
+	emifb_bprio = *(emifb_mem + DA8XX_EMIF30_BPRIO_OFFSET/4);
+	iounmap(emifb_mem);
+#endif
 	return 0;
 }
 
@@ -445,11 +468,17 @@ static inline void da830_evm_init_lcdc(int mux_mode)
 				ret);
 #endif
 
+#ifndef CONFIG_GLCD_DVI_VGA
 	ret = da8xx_register_lcdc(&sharp_lcd035q3dg01_pdata);
 	if (ret)
 		pr_warning("da830_evm_init: lcd setup failed: %d\n", ret);
 
 	gpio_direction_output(mux_mode, 0);
+#else
+	ret = da8xx_register_lcdc(&dvi_vga_adapter_pdata);
+	if (ret)
+		pr_warning("da830_evm_init: lcd setup failed: %d\n", ret);
+#endif
 }
 #else
 static inline void da830_evm_init_lcdc(int mux_mode) { }
@@ -471,8 +500,9 @@ static int __init da830_evm_ui_expander_setup(struct i2c_client *client,
 	/* Drive mux mode low to match the default without UI card */
 	gpio_direction_output(gpio + 6, 0);
 
+#ifndef CONFIG_GLCD_DVI_VGA
 	da830_evm_init_lcdc(gpio + 6);
-
+#endif
 	da830_evm_init_nand(gpio + 6);
 
 	return 0;
@@ -908,6 +938,10 @@ static __init void da830_evm_init(void)
 		pr_warning("da830_evm_init: rtc setup failed: %d\n", ret);
 
 	da830_init_func();
+
+#ifdef CONFIG_GLCD_DVI_VGA
+	da830_evm_init_lcdc(0);
+#endif
 }
 
 #ifdef CONFIG_SERIAL_8250_CONSOLE
diff --git a/arch/arm/mach-davinci/devices-da8xx.c b/arch/arm/mach-davinci/devices-da8xx.c
index 2a3d12f..6de0361 100644
--- a/arch/arm/mach-davinci/devices-da8xx.c
+++ b/arch/arm/mach-davinci/devices-da8xx.c
@@ -596,7 +596,33 @@ int __init da8xx_register_pruss_uio(struct uio_pruss_pdata *config)
 	da8xx_pruss_uio_dev.dev.platform_data = config;
 	return platform_device_register(&da8xx_pruss_uio_dev);
 }
+#ifdef CONFIG_GLCD_DVI_VGA
+static const struct display_panel disp_panel = {
+	VGA,
+	16,
+	16,
+	COLOR_ACTIVE,
+};
 
+static struct lcd_ctrl_config lcd_cfg = {
+	&disp_panel,
+	.ac_bias		= 255,
+	.ac_bias_intrpt		= 0,
+	.dma_burst_sz		= 16,
+	.bpp			= 16,
+	.fdd			= 0,
+	.tft_alt_mode		= 0,
+	.stn_565_mode		= 0,
+	.mono_8bit_mode		= 0,
+	.invert_line_clock	= 0,
+	.invert_frm_clock	= 0,
+	.sync_edge		= 0,
+	.sync_ctrl		= 1,
+	.raster_order		= 0,
+	.fifo_th		= 6,
+};
+
+#else
 static const struct display_panel disp_panel = {
 	QVGA,
 	16,
@@ -621,6 +647,7 @@ static struct lcd_ctrl_config lcd_cfg = {
 	.raster_order		= 0,
 	.fifo_th		= 6,
 };
+#endif
 
 struct da8xx_lcdc_platform_data sharp_lcd035q3dg01_pdata = {
 	.manu_name		= "sharp",
@@ -634,6 +661,12 @@ struct da8xx_lcdc_platform_data sharp_lk043t1dg01_pdata = {
 	.type			= "Sharp_LK043T1DG01",
 };
 
+struct da8xx_lcdc_platform_data dvi_vga_adapter_pdata = {
+	.manu_name		= "dvi",
+	.controller_data	= &lcd_cfg,
+	.type			= "DVI_VGA_ADAPTER",
+};
+
 #if !defined(CONFIG_FB_DA8XX) && !defined(CONFIG_FB_DA8XX_MODULE)
 static struct da8xx_clcd_platform_data da8xx_evm_clcd_pdata = {
 	.version = CONFIG_SPACE_1,
diff --git a/arch/arm/mach-davinci/include/mach/da8xx.h b/arch/arm/mach-davinci/include/mach/da8xx.h
index 5928a34..52cb238 100644
--- a/arch/arm/mach-davinci/include/mach/da8xx.h
+++ b/arch/arm/mach-davinci/include/mach/da8xx.h
@@ -81,6 +81,9 @@ extern unsigned int da850_max_speed;
 #define DA8XX_VPIF_BASE		0x01e17000
 #define DA8XX_SHARED_RAM_BASE	0x80000000
 
+#define DA8XX_EMIF30_CONTROL_BASE	0xB0000000
+#define DA8XX_EMIF30_BPRIO_OFFSET	0x20
+
 static inline int cpu_is_davinci_da8xx_arm_only(void)
 {
 	if (!cpu_is_davinci_da8xx())
@@ -131,6 +134,7 @@ extern struct platform_device da8xx_serial_device;
 extern struct emac_platform_data da8xx_emac_pdata;
 extern struct da8xx_lcdc_platform_data sharp_lcd035q3dg01_pdata;
 extern struct da8xx_lcdc_platform_data sharp_lk043t1dg01_pdata;
+extern struct da8xx_lcdc_platform_data dvi_vga_adapter_pdata;
 extern struct davinci_spi_platform_data da8xx_spi_pdata[];
 
 extern struct platform_device da8xx_wdt_device;
-- 
1.7.9.5

